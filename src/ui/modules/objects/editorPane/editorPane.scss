@import 'editorPane.json';

@mixin editorPane($custom: custom('editorPane')) {
    // Configuration
    $editorPane: config($editorPane, $custom);

    @include module {
        height: calc(100% - #{map-get($header, 'height')});
        margin-left: map-get($editorNav, 'width');
        top: map-get($header, 'height');
        position: relative;
        min-height: 450px;

        @include component('canvas') {
            @include vertical-center;
            @include horizontal-center;

            background: color('greyscale', 'grey-2');
            overflow: hidden;
            width: 600px;
            height: 350px;
        }

        @include component('item') {
            float: left;
            overflow: hidden;

            img {
                display: block;
                width: 100vw;
                height: 100vh;
                object-fit: cover;
            }

            // The below code allows for an infinitely nestable auto-rearranging
            // grid following the pattern outlined in the challenge brief

            $editorPane-gutter: this('item-gutter');

            &:nth-child(1) {
                &:nth-last-child(1) {
                    width: 100%;
                }

                &:nth-last-child(2) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-right: $editorPane-gutter / 2;
                    height: 100%;
                }

                &:nth-last-child(3) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-right: $editorPane-gutter / 2;
                    height: calc(50% - #{$editorPane-gutter / 2});
                    margin-bottom: $editorPane-gutter / 2;
                }

                &:nth-last-child(4) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-right: $editorPane-gutter / 2;
                    height: calc(50% - #{$editorPane-gutter / 2});
                    margin-bottom: $editorPane-gutter / 2;
                }
            }

            &:nth-child(2) {
                &:nth-last-child(1) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-left: $editorPane-gutter / 2;
                    height: 100%;
                }

                &:nth-last-child(2) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-left: $editorPane-gutter / 2;
                    height: calc(50% - #{$editorPane-gutter / 2});
                    margin-bottom: $editorPane-gutter / 2;
                }

                &:nth-last-child(3) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-left: $editorPane-gutter / 2;
                    height: calc(50% - #{$editorPane-gutter / 2});
                    margin-bottom: $editorPane-gutter / 2;
                }
            }

            &:nth-child(3) {
                &:nth-last-child(1) {
                    width: 100%;
                    height: calc(50% - #{$editorPane-gutter / 2});
                    margin-top: $editorPane-gutter / 2;
                }

                &:nth-last-child(2) {
                    width: calc(50% - #{$editorPane-gutter / 2});
                    margin-right: $editorPane-gutter / 2;
                    height: calc(50% - #{$editorPane-gutter / 2});
                    margin-top: $editorPane-gutter / 2;
                }
            }

            &:nth-child(4) {
                width: calc(50% - #{$editorPane-gutter / 2});
                margin-left: $editorPane-gutter / 2;
                height: calc(50% - #{$editorPane-gutter / 2});
                margin-top: $editorPane-gutter / 2;
            }
        }
    }
}