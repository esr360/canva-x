@import 'core.json';
/// Core Styles
///
/// @access public
/// @group utilities
///
/// @param {map} $custom - where custom config will be passed
@mixin core($custom: custom('core')) {

    // Configuration
    $core: config($core, $custom) !global;

    @include module {

        @at-root {

            //*****************************************************
            // General
            //*****************************************************

            html, body {
                margin: 0;
                padding: 0;
            }

            html {
                overflow-x: hidden;
            }

            body {
                background: this('background');
                color: this('text-color');
                font-family: this('font-family');
                font-size: this('font-size');
                line-height: this('line-height');
            }

            ins {
                color: color('brand', 'brand-1');
                font-weight: bold;
                text-decoration: none;
            }

            h1, h2, h3, h4, h5, h6 {
                font-size: this('font-size');
            }

            .code {
                background: rgba(black, 0.2);
                border-radius: 0.2em;
                padding: 0.2em 0.4em;
            }

            @keyframes spin {
                0% {
                    transform: rotate(0deg);
                }

                100% {
                    transform: rotate(360deg);
                }
            }

            ::selection {
                background-color: this('selection-background');
                color: this('selection-color');
                text-shadow: none;
            }

            //*****************************************************
            // Layout & Structure
            //*****************************************************

            @include module('hrule') {
                margin: this('margin') 0;
                border: none;
                border-top: 1px solid this('hrule-color');
            }

            * {
                &, &::before, &::after {
                    box-sizing: border-box;
                }
            }

            h1, h2, h3, h4, h5, h6,
            p, ul, ol,
            form, fieldset, legend, figure, table,
            pre, hr,
            .object {
                @include object;
            }

            .object-small {
                @include object(this('margin') / 2);
            }

        }

    }

} // @mixin core

//*****************************************************************
// Tools & Utilities
//*****************************************************************

/// Function to get configuration group
/// @access public
/// @group utilities
/// @param {map} $group - the group you are interested in
/// @return {map} - new map containing desired group
@function core($key) {
    @return map-get($core, $key);
}

/// Create vertical-rhythm for an element
/// @access public
/// @group utilities
@mixin object($gutter: core('margin')) {
    margin: $gutter 0;
    @include vertical-rhythm;
}