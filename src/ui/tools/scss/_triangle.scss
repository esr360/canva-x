/// Triangle Core
///
/// @access public
/// @group Tools
@mixin triangle-core {
    &::after {
        content: '';
        position: absolute;
        width: 0;
        height: 0;
    }
}

/// Triangle
///
/// @access public
/// @group Tools
@mixin triangle($config: ()) {

    $config: map-merge((
        'core'     : true,
        'position' : top,
        'color'    : color('opaque', 'dark-8'),
        'size'     : 0.5em
    ), $config);

    @if map-get($config, 'core') {
        @include triangle-core;
    }

    &::after {
        margin-left: -#{map-get($config, size)};
        @if map-get($config, 'position') == top {
            top: 100%;
            left: 50%;
            border-top: solid map-get($config, 'size') map-get($config, 'color');
            border-right: solid map-get($config, 'size') transparent;
            border-left: solid map-get($config, 'size') transparent;
        }
        @else if map-get($config, 'position') == bottom {
            bottom: 100%;
            left: 50%;
            border-right: solid map-get($config, 'size') transparent;
            border-bottom: solid map-get($config, 'size') map-get($config, 'color');
            border-left: solid map-get($config, 'size') transparent;
        }
        @else if map-get($config, 'position') == left {
            top: 50%;
            right: -#{map-get($config, size)};
            transform: translateY(-50%);
            border-top: solid map-get($config, 'size') transparent;
            border-bottom: solid map-get($config, 'size') transparent;
            border-left: solid map-get($config, 'size') map-get($config, 'color');
        }
        @else if map-get($config, 'position') == right {
            top: 50%;
            right: 100%;
            transform: translateY(-50%);
            border-top: solid map-get($config, 'size') transparent;
            border-right: solid map-get($config, 'size') map-get($config, 'color');
            border-bottom: solid map-get($config, 'size') transparent;
        }
    }

}